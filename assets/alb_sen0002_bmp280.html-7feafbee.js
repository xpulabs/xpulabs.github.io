import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,d as r,a as n,e as s,w as t,b as a,f as u}from"./app-cdaf2cd7.js";const d="/assets/images/amnos_alb/alb_sen0002_bmp280_0.jpg",h="/assets/images/amnos_alb/alb_sen0002_bmp280_1.jpg",m="/assets/images/amnos_alb/alb_sen0002_bmp280_3.png",b={},k={class:"table-of-contents"},f=u('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>The BMP280 is an absolute barometric pressure sensor especially designed for mobile applications. The BMP280 is based on Bosch&#39;s proven Piezo-resistive pressure sensor technology featuring high EMC robustness, high accuracy and linearity and long term stability. The BMP280 operates at lower noise, supports new filter modes and an SPI interface.</p><figure><img src="'+d+'" alt="alb_sen0002_bmp280_breakout-2" tabindex="0" loading="lazy"><figcaption>alb_sen0002_bmp280_breakout-2</figcaption></figure><figure><img src="'+h+'" alt="alb_sen0002_bmp280_breakout-1" tabindex="0" loading="lazy"><figcaption>alb_sen0002_bmp280_breakout-1</figcaption></figure><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li>Pressure Operation range: 300 - 1100 hPa</li><li>Supply voltage VDDIO 1.2 - 3.6V, VDD 1.71 - 3.6V</li><li>I2C and SPI interface</li><li>Ultra-low power mode with average current 2.74uA</li><li>Resolution of data: Pressure: 0.18Pa</li><li>Available with Altitude Content Provider ACP2.0 Software</li></ul><h2 id="specifications" tabindex="-1"><a class="header-anchor" href="#specifications" aria-hidden="true">#</a> Specifications</h2><ul><li>BMP280 - An absolute barometric pressure sensor</li><li>Headers for I2C/SPI Interface</li><li>Solder Pad for Interface, Device Address and so on.</li><li>Qwiic connector x 2, easy to debug &amp; use</li><li>Dimension: 28 x 18 x 5 mm</li></ul><h2 id="hardware" tabindex="-1"><a class="header-anchor" href="#hardware" aria-hidden="true">#</a> Hardware</h2><figure><img src="'+m+`" alt="alb-sen0001-bmp280-breakout-pinout" tabindex="0" loading="lazy"><figcaption>alb-sen0001-bmp280-breakout-pinout</figcaption></figure><table><thead><tr><th style="text-align:left;">Pin</th><th style="text-align:left;">Description</th><th style="text-align:center;">Note</th></tr></thead><tbody><tr><td style="text-align:left;">VDD</td><td style="text-align:left;">Power supply voltage: 1.7-3.6V</td><td style="text-align:center;"></td></tr><tr><td style="text-align:left;">GND</td><td style="text-align:left;">Ground</td><td style="text-align:center;"></td></tr><tr><td style="text-align:left;">SCL/SCK</td><td style="text-align:left;">I2C interface Clock bus or SPI interface Clock bus</td><td style="text-align:center;">Had external pull-up resistor 4K7</td></tr><tr><td style="text-align:left;">SDA/SDI</td><td style="text-align:left;">I2C interface Data bus or SPI Data in</td><td style="text-align:center;">Had external pull-up resistor 4K7</td></tr><tr><td style="text-align:left;">SDO</td><td style="text-align:left;">SPI Data Out</td><td style="text-align:center;"></td></tr><tr><td style="text-align:left;">CSB</td><td style="text-align:left;">SPI Chip Select</td><td style="text-align:center;"></td></tr></tbody></table><p>Default I<sup>2</sup>C interface 7 bit device address: 0x77</p><h2 id="user-guide" tabindex="-1"><a class="header-anchor" href="#user-guide" aria-hidden="true">#</a> User Guide</h2><p>It is the best choice to develop embedded drivers with embedded rust. Because the driver can be used with MCU like ESP32, also used with ARM64 Linux Application, for example raspberry pi directly.</p><p>You can download the bmp280 rust driver with git, also add your rust project with cargo - <code>cargo add bmp280</code>.</p><p>The examples as below use the first one.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://github.com/lily-mara/bmp280
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><p><strong>Simple Read BMP280 Pressure Data</strong></p><p>This example will simply read bmp280 barometric pressure Sensor Data &amp; Temperature</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">bmp280<span class="token punctuation">::</span></span><span class="token class-name">Bmp280Builder</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> dev <span class="token operator">=</span> <span class="token class-name">Bmp280Builder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token string">&quot;/dev/i2c-3&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0x77</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to build device&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    dev<span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;failed to zero&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} kPa&quot;</span><span class="token punctuation">,</span> dev<span class="token punctuation">.</span><span class="token function">pressure_kpa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} m&quot;</span><span class="token punctuation">,</span> dev<span class="token punctuation">.</span><span class="token function">altitude_m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} c&quot;</span><span class="token punctuation">,</span> dev<span class="token punctuation">.</span><span class="token function">temperature_celsius</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token namespace">std<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>/dev/i2c-3</code> is a i2c controller of rpi.</li><li>The BMP280&#39;s I<sup>2</sup>C Device address is 0x77. So we use <code>new</code> function to create a instance.</li><li><code>pressure_kpa</code> function will get the pressure sensor data</li><li><code>altitude_m</code> function will get the altitude data</li><li><code>temperature_celsius</code> function will get the temperature</li></ul><p>Use the command as below to build and run the app.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> build <span class="token parameter variable">--target</span> aarch64-unknown-linux-gnu -- example simple
<span class="token function">scp</span> <span class="token parameter variable">-r</span> ./target/aarch64-unknown-linux-gnu/debug/example/simple rpi@192.168.6.77:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>After login the RPI with SSH, we can execute the app directly.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo ./simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The terminal will print the accelerator &amp; gyro, temperature.</p><h2 id="buy-it-now" tabindex="-1"><a class="header-anchor" href="#buy-it-now" aria-hidden="true">#</a> Buy it Now</h2>`,28),_={href:"https://www.analoglamb.com",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),v={href:"https://www.xpulabs.com",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"resources",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resources","aria-hidden":"true"},"#"),a(" Resources")],-1),w=n("h3",{id:"documents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#documents","aria-hidden":"true"},"#"),a(" Documents")],-1),y={href:"https://www.bosch-sensortec.com/media/boschsensortec/downloads/product_flyer/bst-bmp280-fl000.pdf",target:"_blank",rel:"noopener noreferrer"},D=n("br",null,null,-1),P=n("a",{href:"/files/schematic/schematic__alb_sen0002_bmp280_breakout_v10.pdf"},"Schematic",-1),S=n("h3",{id:"codes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#codes","aria-hidden":"true"},"#"),a(" Codes")],-1),C={href:"https://github.com/lily-mara/bmp280",target:"_blank",rel:"noopener noreferrer"},B=n("h3",{id:"_3d-drawing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3d-drawing","aria-hidden":"true"},"#"),a(" 3D Drawing")],-1),I=n("p",null,"TBD",-1),q=n("h2",{id:"faq",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#faq","aria-hidden":"true"},"#"),a(" FAQ")],-1),A=n("p",null,"TBD",-1);function T(V,M){const e=o("router-link"),i=o("ExternalLinkIcon");return p(),c("div",null,[r(" more "),n("nav",k,[n("ul",null,[n("li",null,[s(e,{to:"#overview"},{default:t(()=>[a("Overview")]),_:1})]),n("li",null,[s(e,{to:"#features"},{default:t(()=>[a("Features")]),_:1})]),n("li",null,[s(e,{to:"#specifications"},{default:t(()=>[a("Specifications")]),_:1})]),n("li",null,[s(e,{to:"#hardware"},{default:t(()=>[a("Hardware")]),_:1})]),n("li",null,[s(e,{to:"#user-guide"},{default:t(()=>[a("User Guide")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#examples"},{default:t(()=>[a("Examples")]),_:1})])])]),n("li",null,[s(e,{to:"#buy-it-now"},{default:t(()=>[a("Buy it Now")]),_:1})]),n("li",null,[s(e,{to:"#resources"},{default:t(()=>[a("Resources")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#documents"},{default:t(()=>[a("Documents")]),_:1})]),n("li",null,[s(e,{to:"#codes"},{default:t(()=>[a("Codes")]),_:1})]),n("li",null,[s(e,{to:"#_3d-drawing"},{default:t(()=>[a("3D Drawing")]),_:1})])])]),n("li",null,[s(e,{to:"#faq"},{default:t(()=>[a("FAQ")]),_:1})])])]),f,n("p",null,[n("a",_,[a("AnalogLamb.Com"),s(i)]),g,n("a",v,[a("Xpulabs.Com"),s(i)])]),x,w,n("p",null,[n("a",y,[a("BMP280 Datasheet"),s(i)]),D,P]),S,n("p",null,[n("a",C,[a("Github - bmp280-rs"),s(i)])]),B,I,q,A])}const z=l(b,[["render",T],["__file","alb_sen0002_bmp280.html.vue"]]);export{z as default};
