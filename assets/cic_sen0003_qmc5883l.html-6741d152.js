import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,d as u,a as n,e as s,w as e,b as a,f as r}from"./app-cdaf2cd7.js";const d="/assets/images/amnos_cic/cic_sen0003_qmc5883l_0.jpg",k="/assets/images/amnos_cic/cic_sen0003_qmc5883l_1.jpg",m="/assets/images/amnos_cic/cic_sen0003_qmc5883l_3.png",h={},v={class:"table-of-contents"},_=r('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>The QMC5883L is a multi-chip three-axis magnetic sensor. The QMC5883L is based on our state-of-the-art, high resolution, magneto-resistive technology licensed from Honeywell AMR technology. Along with custom-designed 16-bit ADC ASIC, it offers the advantages of low noise, high accuracy, low power consumption, offset cancellation and temperature compensation. QMC5883L enables 1° to 2° compass heading accuracy. The I²C serial bus allows for easy interface.</p><figure><img src="'+d+'" alt="cic_sen0003_qmc5883l_breakout-2" tabindex="0" loading="lazy"><figcaption>cic_sen0003_qmc5883l_breakout-2</figcaption></figure><figure><img src="'+k+'" alt="cic_sen0003_qmc5883l_breakout-1" tabindex="0" loading="lazy"><figcaption>cic_sen0003_qmc5883l_breakout-1</figcaption></figure><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li>3-Axis Magneto-Resistive Sensors in a 3x3x0.9 mm3 Land Grid Array Package (LGA), guaranteed to operate over an extended temperature range of -40 °C to +85 °C.</li><li>16 Bit ADC With Low Noise AMR Sensors Achieves 2 Milli-Gauss Field Resolution</li><li>Wide Magnetic Field Range (±8 Gauss)</li><li>Temperature Compensated Data Output and Temperature Output</li><li>I2C Interface with Standard and Fast Modes.</li><li>Wide Range Operation Voltage (2.16V To 3.6V) and Low Power Consumption (75μA)</li><li>Software And Algorithm Support Available</li></ul><h2 id="specifications" tabindex="-1"><a class="header-anchor" href="#specifications" aria-hidden="true">#</a> Specifications</h2><ul><li>QMC5883L - 3-Axis Magneto-Resistive Sensors</li><li>Headers for I2C Interface</li><li>Qwiic connector x 2, easy to debug &amp; use</li><li>Dimension: 28 x 18 x 5 mm</li></ul><h2 id="hardware" tabindex="-1"><a class="header-anchor" href="#hardware" aria-hidden="true">#</a> Hardware</h2><figure><img src="'+m+`" alt="cic-sen0003-qmc5883l-breakout-pinout" tabindex="0" loading="lazy"><figcaption>cic-sen0003-qmc5883l-breakout-pinout</figcaption></figure><table><thead><tr><th style="text-align:left;">Pin</th><th style="text-align:left;">Description</th><th style="text-align:center;">Note</th></tr></thead><tbody><tr><td style="text-align:left;">VDD</td><td style="text-align:left;">Power supply voltage: 2.2-3.6V</td><td style="text-align:center;"></td></tr><tr><td style="text-align:left;">GND</td><td style="text-align:left;">Ground</td><td style="text-align:center;"></td></tr><tr><td style="text-align:left;">SDA</td><td style="text-align:left;">I2C interface Data bus</td><td style="text-align:center;">Had external pull-up resistor 4K7</td></tr><tr><td style="text-align:left;">SCL</td><td style="text-align:left;">I2C interface Clock bus</td><td style="text-align:center;">Had external pull-up resistor 4K7</td></tr><tr><td style="text-align:left;">RDY</td><td style="text-align:left;">Data Ready, Interrupt Pin. Default low. Data ready high until data register is read</td><td style="text-align:center;"></td></tr></tbody></table><p>Default I2C interface 7 bit device address: 0x0D</p><h2 id="user-guide" tabindex="-1"><a class="header-anchor" href="#user-guide" aria-hidden="true">#</a> User Guide</h2><p>It is the best choice to develop embedded drivers with embedded rust. Because the driver can be used with MCU like ESP32, also used with ARM64 Linux Application, for example raspberry pi directly.</p><p>You can download the QMC5883L rust driver with git, also add your rust project with cargo - <code>cargo add qmc5883l</code>.</p><p>The examples as below use the first one.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git clone https://github.com/xpulabs/qmc5883l-rs/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><p><strong>Simple Read QMC5883L Raw Data</strong></p><p>This example will simply read QMC5883L raw data.</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token keyword">f32</span><span class="token punctuation">::</span><span class="token namespace">consts<span class="token punctuation">::</span></span><span class="token constant">PI</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">linux_embedded_hal<span class="token punctuation">::</span></span><span class="token class-name">I2cdev</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">qmc5883l_rs<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">qmc5883l_rs<span class="token punctuation">::</span></span><span class="token class-name">Qmc5883l</span><span class="token punctuation">;</span>


<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dev <span class="token operator">=</span> <span class="token class-name">I2cdev</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;/dev/i2c-3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> ic <span class="token operator">=</span> <span class="token class-name">Qmc5883l</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> id <span class="token operator">=</span> ic<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot; Qmc5883l id = 0x{:02x}&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token namespace">std<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ic<span class="token punctuation">.</span><span class="token function">set_mode</span><span class="token punctuation">(</span><span class="token class-name">Mode</span><span class="token punctuation">::</span><span class="token constant">CONTINOUS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ic<span class="token punctuation">.</span><span class="token function">set_data_rate</span><span class="token punctuation">(</span><span class="token class-name">DataRate</span><span class="token punctuation">::</span><span class="token constant">DATARATE_200HZ</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ic<span class="token punctuation">.</span><span class="token function">set_range</span><span class="token punctuation">(</span><span class="token class-name">Range</span><span class="token punctuation">::</span><span class="token constant">RANGE_8GA</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ic<span class="token punctuation">.</span><span class="token function">set_samples</span><span class="token punctuation">(</span><span class="token class-name">Samples</span><span class="token punctuation">::</span><span class="token constant">SAMPLES_256</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token namespace">std<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//    Set declination angle on your location and fix heading</span>
<span class="token comment">//    You can find your declination on: http://magnetic-declination.com/</span>
<span class="token comment">//    (+) Positive or (-) for negative</span>
<span class="token comment">//    For Beijing / China declination angle is -7&#39;41E (negative)</span>
<span class="token comment">//    Formula: (deg + (min / 60.0)) / (180 / PI);</span>

    <span class="token keyword">let</span> decl_angle <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">7.0</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">41.0</span><span class="token operator">/</span><span class="token number">60.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">180.0</span><span class="token operator">/</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ic<span class="token punctuation">.</span><span class="token function">set_declination_angle</span><span class="token punctuation">(</span>decl_angle<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> ic<span class="token punctuation">.</span><span class="token function">data_is_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ic<span class="token punctuation">.</span><span class="token function">get_raw_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ic<span class="token punctuation">.</span><span class="token function">get_heading_degrees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;X: {}&quot;</span><span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>x_axis<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Y: {}&quot;</span><span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>y_axis<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Z: {}&quot;</span><span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>z_axis<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Degree: {:.05}&quot;</span><span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>heading_degress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ic<span class="token punctuation">.</span><span class="token function">get_temperature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;T: {} - {}&quot;</span><span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>temp<span class="token punctuation">,</span> ic<span class="token punctuation">.</span>v<span class="token punctuation">.</span>temp_raw<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token namespace">std<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>/dev/i2c-3</code> is a i2c controller of rpi.</li><li>The MPU-6050&#39;s I<sup>2</sup>C Device address is 0x34. So we use <code>new</code> function to create a instance. <code>Mpu6050::new(i2c)</code></li><li><code>set_mode</code> function will set up work mode</li><li><code>set_data_rate</code> function will set up data rate</li><li><code>set_range</code> function will set up the range</li><li><code>set_samples</code> function will set up the sample number</li><li><code>set_declination_angle</code> function will set up the declination angle</li><li><code>get_raw_data</code> function will get raw data</li><li><code>get_heading_degrees</code> function will get heading degrees</li><li><code>get_temperature</code> function will get temperature</li></ul><p>Use the command as below to build and run the app.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> build <span class="token parameter variable">--target</span> aarch64-unknown-linux-gnu -- example linux-qmc5883l
<span class="token function">scp</span> <span class="token parameter variable">-r</span> ./target/aarch64-unknown-linux-gnu/debug/example/linux-qmc5883l rpi@192.168.6.77:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>After login the RPI with SSH, we can execute the app directly.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo ./linux-qmc5883l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The terminal will print the raw data &amp; degree, temperature.</p><h2 id="buy-it-now" tabindex="-1"><a class="header-anchor" href="#buy-it-now" aria-hidden="true">#</a> Buy it Now</h2>`,28),f={href:"https://www.analoglamb.com",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),b={href:"https://www.xpulabs.com",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"resources",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resources","aria-hidden":"true"},"#"),a(" Resources")],-1),x=n("h3",{id:"documents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#documents","aria-hidden":"true"},"#"),a(" Documents")],-1),y={href:"https://www.lcsc.com/datasheet/lcsc_datasheet_2410121532_QST-QMC5883L_C976032.pdf",target:"_blank",rel:"noopener noreferrer"},q=n("br",null,null,-1),C=n("a",{href:"/files/schematic/schematic__cic_sen0003_qmc5883l_breakout_v10.pdf"},"Schematic",-1),D=n("h3",{id:"codes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#codes","aria-hidden":"true"},"#"),a(" Codes")],-1),A={href:"https://github.com/xpulabs/qmc5883l-rs",target:"_blank",rel:"noopener noreferrer"},S=n("h3",{id:"_3d-drawing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3d-drawing","aria-hidden":"true"},"#"),a(" 3D Drawing")],-1),M=n("p",null,"TBD",-1),I=n("h2",{id:"faq",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#faq","aria-hidden":"true"},"#"),a(" FAQ")],-1),L=n("p",null,"TBD",-1);function R(T,Q){const t=o("router-link"),p=o("ExternalLinkIcon");return i(),l("div",null,[u(" more "),n("nav",v,[n("ul",null,[n("li",null,[s(t,{to:"#overview"},{default:e(()=>[a("Overview")]),_:1})]),n("li",null,[s(t,{to:"#features"},{default:e(()=>[a("Features")]),_:1})]),n("li",null,[s(t,{to:"#specifications"},{default:e(()=>[a("Specifications")]),_:1})]),n("li",null,[s(t,{to:"#hardware"},{default:e(()=>[a("Hardware")]),_:1})]),n("li",null,[s(t,{to:"#user-guide"},{default:e(()=>[a("User Guide")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#examples"},{default:e(()=>[a("Examples")]),_:1})])])]),n("li",null,[s(t,{to:"#buy-it-now"},{default:e(()=>[a("Buy it Now")]),_:1})]),n("li",null,[s(t,{to:"#resources"},{default:e(()=>[a("Resources")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#documents"},{default:e(()=>[a("Documents")]),_:1})]),n("li",null,[s(t,{to:"#codes"},{default:e(()=>[a("Codes")]),_:1})]),n("li",null,[s(t,{to:"#_3d-drawing"},{default:e(()=>[a("3D Drawing")]),_:1})])])]),n("li",null,[s(t,{to:"#faq"},{default:e(()=>[a("FAQ")]),_:1})])])]),_,n("p",null,[n("a",f,[a("AnalogLamb.Com"),s(p)]),g,n("a",b,[a("Xpulabs.Com"),s(p)])]),w,x,n("p",null,[n("a",y,[a("QMC5883L Datasheet"),s(p)]),q,C]),D,n("p",null,[n("a",A,[a("Github - qmc5883l-rs"),s(p)])]),S,M,I,L])}const G=c(h,[["render",R],["__file","cic_sen0003_qmc5883l.html.vue"]]);export{G as default};
